package com.flux.models;

import javax.persistence.ColumnResult;
import javax.persistence.ConstructorResult;
import javax.persistence.NamedNativeQuery;
import javax.persistence.SqlResultSetMapping;

import org.springframework.data.jpa.repository.Query;

@SqlResultSetMapping(
	    name="Stats",
	    classes={
	      @ConstructorResult(
	        targetClass=com.flux.models.Stats.class,
	        columns={
	          @ColumnResult(name="state", type=String.class),
	          @ColumnResult(name="total", type=Integer.class),
	          @ColumnResult(name="matchedCount", type=Integer.class),
	          @ColumnResult(name="unmatchedCound", type=Integer.class)})})

@NamedNativeQuery(
		  name = "Statistics",
		  query = " SELECT t.state, \n" + " COUNT(*), \n"
					+ " sum(case when t.state='MATCHED' then 1 else 0 end) as matched , \n"
					+ " sum(case when t.state='UNMATCHED' then 1 else 0 end) as unmatched \n" + " from Transactions t \n"
					+ " group by t.state",
		  resultSetMapping = "FridayEmployeeResult")

//@Query(value=" SELECT t.state, \n" + " COUNT(*), \n"
//		+ " sum(case when t.state='MATCHED' then 1 else 0 end) as matched , \n"
//		+ " sum(case when t.state='UNMATCHED' then 1 else 0 end) as unmatched \n" + " from Transactions t \n"
//		+ " group by t.state", nativeQuery = true)

public class Stats {
	
	private String state;
	private int total;
	private int matchedCount;
	private int unmatchedCount;
	
	Stats(){}
	
	public String getState() {
		return state;
	}
	public void setState(String state) {
		this.state = state;
	}
	public int getTotal() {
		return total;
	}
	public void setTotal(int total) {
		this.total = total;
	}
	public int getMatchedCount() {
		return matchedCount;
	}
	public void setMatchedCount(int matchedCount) {
		this.matchedCount = matchedCount;
	}
	public int getUnmatchedcount() {
		return unmatchedCount;
	}
	public void setUnmatchedcount(int unmatchedcount) {
		this.unmatchedCount = unmatchedcount;
	}
	
	

}
